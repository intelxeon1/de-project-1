Комментарии к ревью.

Файл orders_view.SQL

Данный файл относится ко 2му заданию. Я добавл в realization.md второе задание и добавил туда ссылку на файл.
Также я скорректировал название вью в соответствии с заданием.

Файл views.SQL
Да, в задании действительно требуют создать 5 представлений. Я же создал только нужные, чтобы не плодить лишние сущности.
views.SQL скорректирован в соответствии с заданием




Файл tmp_rfm_frequency.SQL
К сожалению, не могу согласиться с комментарием о неправильности результата. 
Спасибо за функцию, однако, ключ расхождения судя по всему не в этом.

Для проверки - я вручную сделал разбиение на группы в файле excel, сравнил с результатом первые 10 клиентов,
которые представлены в файле datamart_query, а также со всей таблицей. У меня все сходится.

На листе _select_... представлена выгрузка данных на основе запроса:
select * from  analysis.v_users vu2 left outer join analysis.v_orders vo on 
			vu2.id = vo.user_id and vo.status = '4' and vo.order_ts >= '2022-01-01'::timestamp	
		 order by user_id;
		
(На основе этого же запроса строятся показатели recency и monetary_value) .

Далее на Лист1 представлена сводная таблица, где посчитано число заказов и дополнительно сравнивается с ф-й count

Далее на Лист2 сделаны группы в ручную. Сначал выполняется сортировка по B, проставляется группы, а затем сортируется по id клиента.

В колнках H-I выгрузка из БД и сравнение в колонке K.

Если проанализировать разбиение на группы то можно видеть, что на стыке групп число заказов у клиентов одинаково.
В моем случае клиенты располагаются в порядке возврастания. 
Если же клиенты с одинаковым число заказом сортируется стахостически в рамках их ID, то разбиение на группы будет совершенно другим.

Чтобы двигаться дальше мне нужен эталонный запрос, чтобы я мог сравнить причину расхождений.
